"""
Django settings for django_oauth2_api project.

Generated by 'django-admin startproject' using Django 3.1.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '0!9cqza2y-ug#i#01l%nymf(+iexf&)3yzx4=d@p(uhuy!$r0k'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    'django.contrib.sites', # allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount', # for sign in with social accounts

    # 3rd party
    'tinymce', # for rich-text editor
    'rest_framework', # djangorestframework
    'rest_framework.authtoken', # authentication with token
    'rest_auth', # for log in, logout and reset password
    'rest_auth.registration', # for sign in

    'corsheaders',

    # local
    'core.apps.CoreConfig',
    'todo.apps.TodoConfig',
    'api.apps.ApiConfig',
    'blogapi.apps.BlogapiConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

# django-cors-headers whitelist configuration
CORS_ORIGIN_WHITELIST=(
    'http://127.0.0.1:8000',
    'http://127.0.0.1:8080',
)


# configuring Django Rest Framework specific settings 
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticatedOrReadOnly',
        # AllowAny -> any user, authenticated or not, has full access
        # IsAuthenticated -> only authenticated, registered users have access
        # IsAdminUser -> only admin/superusers have access
        # IsAuthenticatedOrReadOnly -> unautherized users can views any page, but only authenticated users have write, edit or delete privileges
    ],

    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.SessionAuthentication', # Sessions are used to power the browsable API and ability to log in and log out of it
        #'rest_framework.authentication.BaseAuthentication', # BaseAuthentication is used to pass the session ID in the http header for the API itself
        'rest_framework.authentication.TokenAuthentication'
    ]
}

ROOT_URLCONF = 'django_oauth2_api.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_oauth2_api.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Tashkent'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# email service

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'dovurovjamshid898@gmail.com'
EMAIL_HOST_PASSWORD = 'bxkgbnskehpobmdp'

SITE_ID = 1


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

STATIC_ROOT = BASE_DIR / '/static_root/'
MEDIA_ROOT  = BASE_DIR / '/media_root/'

STATICFILES_DIRS =[BASE_DIR, 'static/']